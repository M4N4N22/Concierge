{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x845Dc38fCe646C1F0FeB5b607B069D6A62537B81",
      "txHash": "0x528573621465c47c4c774d3979b5bb9fbc30b54ac5d2c18d2387289757ec9962",
      "kind": "transparent"
    },
    {
      "address": "0x7fE958CaF70cdcEC187f30A216924878e2D89389",
      "txHash": "0x894594e8062b33f5362f8cbad88cb35271d33c642142371bf2e7507ad5528f51",
      "kind": "transparent"
    }
  ],
  "impls": {
    "c587796db2d3b7fa0c4f0f2519b75ba5a69e631f1d2ea1ff484fb4655fd9708b": {
      "address": "0xa254b1de54A9319a16C4cCB36A5d129D4dA38a37",
      "txHash": "0x7b6d0029c83c565242b75031411ba34b342bd4d9e8bcbe994adc3647c3596814",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "userFiles",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_array(t_struct(FileData)528_storage)dyn_storage)",
            "contract": "Vault",
            "src": "contracts\\Vault\\Vault.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(FileData)528_storage)dyn_storage": {
            "label": "struct Vault.FileData[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(FileData)528_storage)dyn_storage)": {
            "label": "mapping(address => struct Vault.FileData[])",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(FileData)528_storage": {
            "label": "struct Vault.FileData",
            "members": [
              {
                "label": "fileHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "category",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "encryptedKey",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "insightsCID",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fa4b3983c96860ddec53242ad9dc12e606dd392b22755729a5bcb75a3350710d": {
      "address": "0x12AF2E4944cd911C9d7ED2849096AF71f111a416",
      "txHash": "0x32ffd3201768f3d5be41ac10296b9445d0a6e2b06bfdcc62f58d548429320192",
      "layout": {
        "solcVersion": "0.8.28",
        "storage": [
          {
            "label": "_tokenIdCounter",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "INFTAgent",
            "src": "contracts\\Agent\\INFTAgent.sol:29"
          },
          {
            "label": "vaults",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "INFTAgent",
            "src": "contracts\\Agent\\INFTAgent.sol:32"
          },
          {
            "label": "agentByOwner",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "INFTAgent",
            "src": "contracts\\Agent\\INFTAgent.sol:35"
          },
          {
            "label": "_encryptedData",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(EncryptedMetadata)7053_storage)",
            "contract": "INFTAgent",
            "src": "contracts\\Agent\\INFTAgent.sol:42"
          },
          {
            "label": "agentDomain",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "INFTAgent",
            "src": "contracts\\Agent\\INFTAgent.sol:45"
          },
          {
            "label": "profiles",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(AgentProfile)7069_storage)",
            "contract": "INFTAgent",
            "src": "contracts\\Agent\\INFTAgent.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)177_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AgentProfile)7069_storage)": {
            "label": "mapping(uint256 => struct INFTAgent.AgentProfile)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(EncryptedMetadata)7053_storage)": {
            "label": "mapping(uint256 => struct INFTAgent.EncryptedMetadata)",
            "numberOfBytes": "32"
          },
          "t_struct(AgentProfile)7069_storage": {
            "label": "struct INFTAgent.AgentProfile",
            "members": [
              {
                "label": "embeddingURI",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "aiSignature",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(EncryptedMetadata)7053_storage": {
            "label": "struct INFTAgent.EncryptedMetadata",
            "members": [
              {
                "label": "encryptedHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "encryptionKeyOwner",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
